apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcm-app
  namespace: rcm-system
  labels:
    app: rcm-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rcm-app
  template:
    metadata:
      labels:
        app: rcm-app
        version: v1
    spec:
      containers:
      - name: rcm-app
        image: rcm-app:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: rcm-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: rcm-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: rcm-config
              key: DB_HOST
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: rcm-secrets
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: rcm-secrets
              key: DB_PASS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rcm-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rcm-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: rcm-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/monitoring/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/monitoring/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: rcm-logs-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: rcm-uploads-pvc
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcm-mysql
  namespace: rcm-system
  labels:
    app: rcm-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rcm-mysql
  template:
    metadata:
      labels:
        app: rcm-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: "rcm_production"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_PASSWORD
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - localhost
            - -u
            - root
            - -p$MYSQL_ROOT_PASSWORD
            - -e
            - "SELECT 1"
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data-pvc
      - name: mysql-config
        configMap:
          name: mysql-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcm-redis
  namespace: rcm-system
  labels:
    app: rcm-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rcm-redis
  template:
    metadata:
      labels:
        app: rcm-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcm-nginx
  namespace: rcm-system
  labels:
    app: rcm-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rcm-nginx
  template:
    metadata:
      labels:
        app: rcm-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config