{
  "info": {
    "name": "Enhanced Billing System API",
    "description": "Complete API collection for the bills-to-invoices system with payment processing",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/billing",
      "type": "string"
    },
    {
      "key": "bill_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "invoice_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "payment_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Bills Management",
      "item": [
        {
          "name": "Create Bill",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bill_id', response.data.id);",
                  "    pm.test('Bill created successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.id).to.be.a('number');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"patient_id\": 100,\n  \"items\": [\n    {\n      \"service_id\": 1,\n      \"quantity\": 1,\n      \"unit_price\": 250.00\n    },\n    {\n      \"service_id\": 2,\n      \"quantity\": 2,\n      \"unit_price\": 150.00\n    }\n  ],\n  \"notes\": \"Initial consultation and follow-up visits\",\n  \"created_by\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bills",
              "host": ["{{baseUrl}}"],
              "path": ["bills"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Bills",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Bills retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/bills?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["bills"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Bill by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Bill retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.id).to.equal(parseInt(pm.collectionVariables.get('bill_id')));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/bills/{{bill_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["bills", "{{bill_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Bill Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Bill items updated successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"service_id\": 1,\n      \"quantity\": 1,\n      \"unit_price\": 275.00\n    },\n    {\n      \"service_id\": 3,\n      \"quantity\": 1,\n      \"unit_price\": 75.00\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bills/{{bill_id}}/items",
              "host": ["{{baseUrl}}"],
              "path": ["bills", "{{bill_id}}", "items"]
            }
          },
          "response": []
        },
        {
          "name": "Generate Invoice from Bill",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('invoice_id', response.data.id);",
                  "    pm.test('Invoice generated successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.invoice_number).to.match(/^INV-\\d{4}-\\d{4}$/);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"due_in_days\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bills/{{bill_id}}/invoice",
              "host": ["{{baseUrl}}"],
              "path": ["bills", "{{bill_id}}", "invoice"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Invoice Management",
      "item": [
        {
          "name": "Get All Invoices",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invoices retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoices?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["invoices"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Invoice Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invoice details retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.items).to.be.an('array');",
                  "    pm.expect(response.data.payments).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Overdue Invoices",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Overdue invoices retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoices?overdue_only=true",
              "host": ["{{baseUrl}}"],
              "path": ["invoices"],
              "query": [
                {
                  "key": "overdue_only",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Invoice Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invoice status updated successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"overdue\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Cancel Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invoice cancelled successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Patient requested cancellation due to insurance coverage\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}", "cancel"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Payment Processing",
      "item": [
        {
          "name": "Record Partial Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data.payments && response.data.payments.length > 0) {",
                  "        pm.collectionVariables.set('payment_id', response.data.payments[0].id);",
                  "    }",
                  "    pm.test('Partial payment recorded successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.status).to.be.oneOf(['partially_paid', 'paid']);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount_paid\": 200.00,\n  \"payment_method\": \"card\",\n  \"transaction_id\": \"txn_1234567890\",\n  \"reference_number\": \"REF001\",\n  \"payment_gateway\": \"stripe\",\n  \"gateway_transaction_id\": \"pi_1234567890\",\n  \"notes\": \"Partial payment via credit card\",\n  \"created_by\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}/payments",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}", "payments"]
            }
          },
          "response": []
        },
        {
          "name": "Record Full Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Full payment recorded successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.status).to.equal('paid');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount_paid\": 150.00,\n  \"payment_method\": \"cash\",\n  \"reference_number\": \"CASH002\",\n  \"payment_gateway\": \"manual\",\n  \"notes\": \"Final payment in cash\",\n  \"created_by\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}/payments",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}", "payments"]
            }
          },
          "response": []
        },
        {
          "name": "Get Payment History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment history retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invoices/{{invoice_id}}/payments",
              "host": ["{{baseUrl}}"],
              "path": ["invoices", "{{invoice_id}}", "payments"]
            }
          },
          "response": []
        },
        {
          "name": "Void Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment voided successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Duplicate payment - refunding to customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/payments/{{payment_id}}/void",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "{{payment_id}}", "void"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reports & Analytics",
      "item": [
        {
          "name": "Aging Report",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Aging report generated successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/aging",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "aging"]
            }
          },
          "response": []
        },
        {
          "name": "Patient Aging Report",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Patient aging report generated successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/aging?patient_id=100",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "aging"],
              "query": [
                {
                  "key": "patient_id",
                  "value": "100"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Utility Endpoints",
      "item": [
        {
          "name": "Get All Services",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Services retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Patients",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Patients retrieved successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/patients",
              "host": ["{{baseUrl}}"],
              "path": ["patients"]
            }
          },
          "response": []
        },
        {
          "name": "Search Patients",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Patient search completed successfully', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/patients/search?q=john",
              "host": ["{{baseUrl}}"],
              "path": ["patients", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "john"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic timestamps",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response time",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "// Global test for status code",
          "pm.test('Status code is success', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
          "});"
        ]
      }
    }
  ]
}